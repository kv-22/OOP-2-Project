/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.petservicesapplication;

import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Random;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author Ayesh
 */
public class Payment extends javax.swing.JFrame {

    Random rand = new Random();
    private Connection con;
    private Statement st;
    private ResultSet rs;
    private PreparedStatement preparedStatement;
    private final String getPaymentId = "SELECT idpayment FROM PAYMENTS WHERE idPayment=(SELECT max(idPayment) FROM PAYMENTS as p where p.paymethod not like '____')";
    private PreparedStatement payment;
    private PreparedStatement creditpayment;
    int upperbound = 1000;
    int orderID;
    Order order;

    SimpleDateFormat sqlDateFormat = new SimpleDateFormat("yyyy-MM-dd");
    Customer customer;
    Cart cart;
    String pattern = "MM/YY";
    SimpleDateFormat simpleDateFormat = new SimpleDateFormat(pattern);
    Double Quantity;
    java.sql.Date sqlDate = new java.sql.Date(new java.util.Date().getTime());
    String dateSql = sqlDateFormat.format(sqlDate);

    public Payment() {
        initComponents();

    }

    public Payment(Customer customer, double Q, Order order) {
        Quantity = Q;
        initComponents();
        this.customer = customer;
        this.order = order;

        orderTable();
        addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent e) {
                new CustomerMenu(customer).setVisible(true);
            }
        });
    }

    private void orderTable() {
        try {
            con = DriverManager.getConnection("jdbc:derby://localhost:1527/pawfect", "pawfect", "pawfect");
            st = con.createStatement();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }

    }

    private void closeDB() {
        try {

            st.close();
            con.close();

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }

    private void payment() {
        try {
            this.orderID = rand.nextInt(upperbound);
            this.order.setOrderID(orderID);
            payment = con.prepareStatement("INSERT INTO PAYMENTS (PayMethod, TotalAmount, Tax, Date) VALUES (?,?,0.15,?)");

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }

    private void credit() {
        try {
            con = MyConnection.connectdb();
            PreparedStatement ps;
            ps = con.prepareStatement(getPaymentId);
            rs = ps.executeQuery();
            rs.next();
            int payID = rs.getInt(1);
            creditpayment = con.prepareStatement("INSERT INTO CREDITPAYMENTS (CardType, Payment_idPayment) VALUES (?,?)");
            String cardType;
            String type = CardNumber.getText();

            if (type.substring(0, 1).matches("[3-5]")) {
                if (type.substring(0, 1).matches("[3]")) {
                    cardType = "American Express";
                } else if (type.substring(0, 1).matches("[4]")) {
                    cardType = "Visa";
                } else {
                    cardType = "Mada";
                }
            } else {
                cardType = "ApplePay";
            }

            creditpayment.setString(1, cardType);
            creditpayment.setInt(2, payID);
            creditpayment.executeUpdate();
            rs.close();

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.ButtonGroup buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        CashPayment = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        CardNumber = new javax.swing.JFormattedTextField();
        ExpiryDate = new javax.swing.JFormattedTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        CVC = new javax.swing.JFormattedTextField();
        cancelPayment = new javax.swing.JLabel();
        ConfirmPayment = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setBounds(new java.awt.Rectangle(0, 0, 0, 0));
        setPreferredSize(new java.awt.Dimension(650, 500));
        setSize(new java.awt.Dimension(650, 500));

        jPanel1.setBackground(new java.awt.Color(242, 178, 73));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Logo1.png"))); // NOI18N
        jLabel1.setPreferredSize(new java.awt.Dimension(200, 170));

        jLabel2.setFont(new java.awt.Font("Showcard Gothic", 1, 36)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(142, 98, 77));
        jLabel2.setText("Payment");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(158, 158, 158))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(85, 85, 85)
                .addComponent(jLabel2)
                .addGap(44, 44, 44))
            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jPanel2.setBackground(new java.awt.Color(132, 194, 217));

        CashPayment.setBackground(new java.awt.Color(242, 178, 73));
        CashPayment.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        CashPayment.setForeground(new java.awt.Color(0, 0, 0));
        CashPayment.setText("Cash Payment");
        CashPayment.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        CashPayment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CashPaymentActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("OR PAY USING CARD");

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("Card Information : ");

        jPanel3.setBackground(new java.awt.Color(132, 194, 217));
        jPanel3.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        jPanel3.setForeground(new java.awt.Color(0, 0, 0));

        jLabel5.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setText("Card Number:");

        CardNumber.setBackground(new java.awt.Color(204, 204, 204));
        CardNumber.setForeground(new java.awt.Color(0, 0, 0));
        try {
            CardNumber.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("#### #### #### ####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        CardNumber.setToolTipText("Enter 16 digits");
        CardNumber.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        CardNumber.setOpaque(true);
        CardNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CardNumberActionPerformed(evt);
            }
        });
        CardNumber.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                CardNumberPropertyChange(evt);
            }
        });
        CardNumber.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                CardNumberKeyTyped(evt);
            }
        });

        ExpiryDate.setBackground(new java.awt.Color(204, 204, 204));
        ExpiryDate.setForeground(new java.awt.Color(0, 0, 0));
        try {
            ExpiryDate.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        ExpiryDate.setToolTipText("mm/yy");
        ExpiryDate.setCaretColor(new java.awt.Color(0, 0, 0));
        ExpiryDate.setNextFocusableComponent(CVC);
        ExpiryDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExpiryDateActionPerformed(evt);
            }
        });
        ExpiryDate.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ExpiryDateKeyReleased(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 0));
        jLabel6.setText("Expiry Date:");

        jLabel7.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 0, 0));
        jLabel7.setText("CVC:");

        CVC.setBackground(new java.awt.Color(204, 204, 204));
        CVC.setForeground(new java.awt.Color(0, 0, 0));
        try {
            CVC.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        CVC.setToolTipText("3 digits");
        CVC.setCaretColor(new java.awt.Color(0, 0, 0));
        CVC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CVCActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(50, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addGap(30, 30, 30)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(ExpiryDate, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel7)
                        .addGap(144, 144, 144))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(CardNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(CVC, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(50, 50, 50))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CardNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(CVC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel7))
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(ExpiryDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel6)))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        cancelPayment.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        cancelPayment.setForeground(new java.awt.Color(0, 0, 0));
        cancelPayment.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8-left-arrow-30.png"))); // NOI18N
        cancelPayment.setText("Cancel Payment");
        cancelPayment.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                cancelPaymentMouseReleased(evt);
            }
        });

        ConfirmPayment.setBackground(new java.awt.Color(242, 178, 73));
        ConfirmPayment.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        ConfirmPayment.setForeground(new java.awt.Color(0, 0, 0));
        ConfirmPayment.setText("Confirm Payment");
        ConfirmPayment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConfirmPaymentActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(68, 68, 68)
                        .addComponent(jLabel4))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(cancelPayment)
                        .addGap(133, 133, 133)
                        .addComponent(ConfirmPayment))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(CashPayment, javax.swing.GroupLayout.PREFERRED_SIZE, 560, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(94, 94, 94)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(37, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(CashPayment, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 23, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cancelPayment))
                    .addComponent(ConfirmPayment, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap(66, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void ConfirmPaymentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConfirmPaymentActionPerformed

        try {

            if (CardNumber.getText().isBlank() || ExpiryDate.getText().contains("  /  ") || CVC.getText().isBlank()) {

                JOptionPane confirmInvalid = new JOptionPane();
                JOptionPane.showMessageDialog(null, "Please make sure to enter valid values", "Invalid entry", JOptionPane.ERROR_MESSAGE);
                return;
            } else {

                JOptionPane pane = new JOptionPane();
                ImageIcon icon = new ImageIcon(getClass().getResource("/images/Logo1.png"));
                JOptionPane.showMessageDialog(null, "Thank you for shopping with us, Pawfect Pets wishes you and your pet a Pawfect Day!!  ", "Order Completed", JOptionPane.PLAIN_MESSAGE, icon);

                payment();
                payment.setString(1, "Credit");//paymethod
                payment.setDouble(2, Quantity);//totalamount
                payment.setDate(3, sqlDate); //date

                payment.executeUpdate();

            }
            closeDB();

            credit();
            closeDB();
            customer.clearCart();
            new CustomerMenu(customer).setVisible(true);
            this.dispose();

        } catch (Exception npe) {
            JOptionPane confirmInvalid = new JOptionPane();
            JOptionPane.showMessageDialog(null, " Please make sure to enter valid values ", "Invalid entry", JOptionPane.ERROR_MESSAGE);
        }
        FileHandler fh = new FileHandler(order, customer.getUserID());
        fh.addRecords();

// TODO add your handling code here:
    }//GEN-LAST:event_ConfirmPaymentActionPerformed

    private void cancelPaymentMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cancelPaymentMouseReleased

        int n = JOptionPane.showConfirmDialog(
                jPanel1, "Would you like to cancel payment?",
                "Cancel Payment",
                JOptionPane.YES_NO_OPTION);
        if (n == JOptionPane.YES_OPTION) {
            new CustomerMenu(customer).setVisible(true);
            this.dispose();

        } else if (n == JOptionPane.NO_OPTION) {
            this.setVisible(true);
        }
    }//GEN-LAST:event_cancelPaymentMouseReleased

    private void CVCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CVCActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CVCActionPerformed

    private void ExpiryDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExpiryDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ExpiryDateActionPerformed

    private void CardNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CardNumberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CardNumberActionPerformed

    private void CashPaymentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CashPaymentActionPerformed
        // TODO add your handling code here:

        try {
            payment();

            JOptionPane pane = new JOptionPane();
            ImageIcon icon = new ImageIcon(getClass().getResource("/images/Logo1.png"));
            JOptionPane.showMessageDialog(null, "Your Order ID is : " + orderID + ". \nThank you for shopping with us, Pawfect Pets wishes you and your pet a Pawfect Day!!", "Cash Payment", JOptionPane.PLAIN_MESSAGE, icon);

            payment.setString(1, "Cash");//paymethod
            payment.setDouble(2, Quantity);//totalamount
            payment.setString(3, dateSql); //date
            payment.executeUpdate();
            closeDB();

            FileHandler fh = new FileHandler(order, customer.getUserID());
            fh.addRecords();
            customer.clearCart();
            new CustomerMenu(customer).setVisible(true);
            this.dispose();

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e);
        }

    }//GEN-LAST:event_CashPaymentActionPerformed

    private void CardNumberPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_CardNumberPropertyChange

        // TODO add your handling code here:
    }//GEN-LAST:event_CardNumberPropertyChange

    private void ExpiryDateKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ExpiryDateKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_ExpiryDateKeyReleased

    private void CardNumberKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_CardNumberKeyTyped

    }//GEN-LAST:event_CardNumberKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Payment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Payment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Payment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Payment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new Payment().setVisible(true);

            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFormattedTextField CVC;
    private javax.swing.JFormattedTextField CardNumber;
    private javax.swing.JButton CashPayment;
    private javax.swing.JButton ConfirmPayment;
    private javax.swing.JFormattedTextField ExpiryDate;
    private javax.swing.JLabel cancelPayment;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator3;
    // End of variables declaration//GEN-END:variables
}
